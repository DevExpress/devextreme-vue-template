{"version":3,"file":"js/login0.ac80aa67.js","mappings":"yNAmCgBA,MAAM,kB,GAnCtBC,IAAA,G,2QACEC,EAAAA,EAAAA,IAyCO,QAzCAC,SAAMC,EAAA,KAAAA,EAAA,IADfC,EAAAA,EAAAA,KAAA,IAAAC,IACyBC,EAAAJ,UAAAI,EAAAJ,YAAAG,IAAQ,e,EAC7BE,EAAAA,EAAAA,IAuCUC,EAAA,CAvCA,YAAWF,EAAAG,SAAWC,SAAUJ,EAAAK,S,CA+B7BC,gBAAcC,EAAAA,EAAAA,KACvB,IAKM,EALNC,EAAAA,EAAAA,IAKM,aAJJA,EAAAA,EAAAA,IAGO,OAHPC,EAGO,CAFqBT,EAAAK,UAAO,WAA/BK,EAAAA,EAAAA,IAA8EC,EAAA,CApC5FjB,IAAA,EAoC+CkB,MAAM,OAAOC,OAAO,OAAQC,SAAS,MApCpFC,EAAAA,EAAAA,IAAA,OAqC2Bf,EAAAK,SArC3BU,EAAAA,EAAAA,IAAA,SAqCkC,WAApBpB,EAAAA,EAAAA,IAAqC,OArCnDqB,EAqCoC,oBArCpCC,SAAAV,EAAAA,EAAAA,KAGM,IAOU,EAPVN,EAAAA,EAAAA,IAOUiB,EAAA,CANR,aAAW,WACX,cAAY,YACX,iBAAgB,CAAAC,YAAA,SAAAC,YAAA,WAAAC,KAAA,a,CANzBJ,SAAAV,EAAAA,EAAAA,KAQQ,IAAmD,EAAnDN,EAAAA,EAAAA,IAAmDqB,EAAA,CAAjCC,QAAQ,0BAC1BtB,EAAAA,EAAAA,IAA6BuB,EAAA,CAAlBV,SAAS,OAT5BW,EAAA,KAWMxB,EAAAA,EAAAA,IAWUiB,EAAA,CAVR,aAAW,oBACX,cAAY,YACX,iBAAgB,CAAAC,YAAA,SAAAC,YAAA,mBAAAC,KAAA,a,CAdzBJ,SAAAV,EAAAA,EAAAA,KAgBQ,IAAmD,EAAnDN,EAAAA,EAAAA,IAAmDqB,EAAA,CAAjCC,QAAQ,0BAC1BtB,EAAAA,EAAAA,IAGEyB,EAAA,CAFAH,QAAQ,yBACP,sBAAqBvB,EAAA2B,iB,iCAExB1B,EAAAA,EAAAA,IAA6BuB,EAAA,CAAlBV,SAAS,OArB5BW,EAAA,KAuBMxB,EAAAA,EAAAA,IAQiB2B,EAAA,MA/BvBX,SAAAV,EAAAA,EAAAA,KAwBQ,IAMoB,EANpBN,EAAAA,EAAAA,IAMoB4B,EAAA,CALlBjB,MAAM,OACNkB,KAAK,UACLC,SAAS,iBACR,uBAAqB,OA5BhCN,EAAA,OAAAA,EAAA,G,wGA6DA,GACAO,WAAY,CACRC,OAAM,KACNC,OAAM,KACNC,QAAO,KACPC,aAAY,IACZC,gBAAe,KACfC,eAAc,KACdC,aAAY,KACZC,gBAAeA,EAAAA,GAEjBC,KAAAA,GACE,MAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MAERC,GAAeC,EAAAA,EAAAA,IAAI,IACnB1C,GAAU0C,EAAAA,EAAAA,KAAI,GACd5C,GAAW6C,EAAAA,EAAAA,IAAS,CACxBC,SAAS,KAKXC,eAAetD,IACb,MAAM,SAAEqD,GAAa9C,EACrBE,EAAQ8C,OAAQ,EAEhB,MAAMC,QAAeC,EAAAA,EAAK/C,eAAe2C,EAAUH,EAAaK,OAChE9C,EAAQ8C,OAAQ,EAEZC,EAAOE,KACTZ,EAAOa,KAAK,gBAEZC,EAAAA,EAAAA,GAAOJ,EAAO7B,QAAS,QAAS,IAEpC,CAEA,SAASI,EAAiB8B,GACxB,OAAOA,EAAEN,QAAUhD,EAAS8C,QAC9B,CAEA,OApBAH,EAAaK,MAAQP,EAAMc,OAAOZ,aAoB3B,CACLzC,UACAF,WACAP,WACA+B,kBAEJ,G,UCvGF,MAAMgC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://devextreme-vue-template/./src/views/change-password-form.vue","webpack://devextreme-vue-template/./src/views/change-password-form.vue?42c7"],"sourcesContent":["<template>\n  <form @submit.prevent=\"onSubmit\">\n    <dx-form :form-data=\"formData\" :disabled=\"loading\">\n      <dx-item\n        data-field=\"password\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Password', mode: 'password' }\"\n      >\n        <dx-required-rule message=\"Password is required\" />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-item\n        data-field=\"confirmedPassword\"\n        editor-type=\"dxTextBox\"\n        :editor-options=\"{ stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' }\"\n      >\n        <dx-required-rule message=\"Password is required\" />\n        <dx-custom-rule\n          message=\"Passwords do not match\"\n          :validation-callback=\"confirmPassword\"\n        />\n        <dx-label :visible=\"false\" />\n      </dx-item>\n      <dx-button-item>\n        <dx-button-options\n          width=\"100%\"\n          type=\"default\"\n          template=\"changePassword\"\n          :use-submit-behavior=\"true\"\n        >\n        </dx-button-options>\n      </dx-button-item>\n\n      <template #changePassword>\n        <div>\n          <span class=\"dx-button-text\">\n              <dx-loadIndicator v-if=\"loading\" width=\"24px\" height=\"24px\" :visible=\"true\" />\n              <span v-if=\"!loading\">Continue</span>\n          </span>\n        </div>\n      </template>\n    </dx-form>\n  </form>\n</template>\n\n<script>\nimport DxForm, {\n  DxItem,\n  DxLabel,\n  DxButtonItem,\n  DxButtonOptions,\n  DxCustomRule,\n  DxRequiredRule\n} from 'devextreme-vue/form';\nimport DxLoadIndicator from 'devextreme-vue/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ref, reactive } from \"vue\";\n\nimport auth from \"../auth\";\n\nexport default {\ncomponents: {\n    DxForm,\n    DxItem,\n    DxLabel,\n    DxButtonItem,\n    DxButtonOptions,\n    DxRequiredRule,\n    DxCustomRule,\n    DxLoadIndicator\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n\n    const recoveryCode = ref(\"\");\n    const loading = ref(false);\n    const formData = reactive({\n      password:\"\"\n    });\n\n    recoveryCode.value = route.params.recoveryCode;\n\n    async function onSubmit() {\n      const { password } = formData;\n      loading.value = true;\n  \n      const result = await auth.changePassword(password, recoveryCode.value);\n      loading.value = false;\n  \n      if (result.isOk) {\n        router.push(\"/login-form\");\n      } else {\n        notify(result.message, 'error', 2000);\n      }\n    }\n\n    function confirmPassword (e) {\n      return e.value === formData.password;\n    }\n\n    return {\n      loading,\n      formData,\n      onSubmit,\n      confirmPassword\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import { render } from \"./change-password-form.vue?vue&type=template&id=e9860d54\"\nimport script from \"./change-password-form.vue?vue&type=script&lang=js\"\nexport * from \"./change-password-form.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","onSubmit","_cache","_withModifiers","args","$setup","_createVNode","_component_dx_form","formData","disabled","loading","changePassword","_withCtx","_createElementVNode","_hoisted_1","_createBlock","_component_dx_loadIndicator","width","height","visible","_createCommentVNode","_hoisted_2","default","_component_dx_item","stylingMode","placeholder","mode","_component_dx_required_rule","message","_component_dx_label","_","_component_dx_custom_rule","confirmPassword","_component_dx_button_item","_component_dx_button_options","type","template","components","DxForm","DxItem","DxLabel","DxButtonItem","DxButtonOptions","DxRequiredRule","DxCustomRule","DxLoadIndicator","setup","router","useRouter","route","useRoute","recoveryCode","ref","reactive","password","async","value","result","auth","isOk","push","notify","e","params","__exports__","render"],"sourceRoot":""}